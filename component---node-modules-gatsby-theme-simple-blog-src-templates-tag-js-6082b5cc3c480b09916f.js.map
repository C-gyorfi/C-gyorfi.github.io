{"version":3,"sources":["webpack://gatsby-starter-hello-world/./node_modules/gatsby-theme-simple-blog/src/components/PostList.js","webpack://gatsby-starter-hello-world/./node_modules/gatsby-theme-simple-blog/src/templates/tag.js"],"names":["posts","themeConfig","locale","tagsPath","loadMorePosts","useState","postsPerPage","length","setPostsPerPage","postsIncrementBy","counter","setCounter","useEffect","slice","cssClass","title","description","className","map","index","node","key","toString","sx","color","formatDate","date","to","slug","style","textDecoration","fontSize","dangerouslySetInnerHTML","__html","tags","tag","slugify","variant","tabIndex","onClick","onKeyUp","data","pageContext","allBlogPost","edges"],"mappings":"qNA0GA,IA/FiB,SAAC,GAA8C,IAA5CA,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACvCC,EAAkBH,EAAlBG,cADsD,GAEtBC,cACvCD,EAAgBH,EAAYK,aAAeN,EAAMO,QAD3CD,EAFuD,KAEzCE,EAFyC,KAKvDC,GAAoBJ,cAASJ,EAAYQ,kBALc,MAMhCJ,cAAS,GAAhCK,EANuD,KAM9CC,EAN8C,MAQ9DC,gBAAU,WACTD,EAAWX,EAAMa,MAAM,EAAGP,GAAcC,UACtC,CAACD,EAAcG,EAAkBC,IAOpC,OACC,QAAC,IAAD,CAAQI,SAAS,qBAChB,QAAC,IAAD,CAAKC,MAAM,QAAQC,YAAY,uBAC/B,eAAKC,UAAU,iBACd,QAAC,QAAD,CAAWA,UAAU,iBAArB,UACA,eAAKA,UAAU,iBACbjB,EAAMa,MAAM,EAAGP,GAAcY,KAAI,WAAWC,GAAW,IAAnBC,EAAkB,EAAlBA,KACpC,OACC,eAAKH,UAAU,OAAOI,IAAKF,EAAMG,aAChC,eAAKL,UAAU,iBACd,eAAKA,UAAU,cACd,gBACCM,GAAI,CACHC,MAAO,QAERP,UAAU,cAETQ,gBAAWL,EAAKM,KAAMxB,KAExB,QAAC,IAAD,CACCe,UAAU,YACVU,GAAE,GAAKP,EAAKQ,KACZC,MAAO,CAAEC,eAAgB,UAEzB,QAAC,QAAD,CACCP,GAAI,CAAEQ,SAAU,GAChBd,UAAU,aACVe,wBAAyB,CACxBC,OAAQb,EAAKL,YAKjB,eAAKE,UAAU,aACbG,EAAKc,KAAKhB,KAAI,SAACiB,EAAKhB,GACpB,OACC,QAAC,IAAD,CACCQ,GAAOxB,EAAL,KAAiBiC,aAClBD,GAEDd,IAAKF,EAAMG,YAEVa,YASRzB,EAAUV,EAAMO,QAAUH,IAC1B,eAAKa,UAAU,sBACd,kBACCM,GAAI,CAAEc,QAAS,mBACfC,SAAU,EACVC,QA7DU,WAChB5B,EAAWX,EAAMa,MAAM,EAAGP,EAAeG,GAAkBF,QAC3DC,EAAgBF,EAAeG,IA4DzB+B,QAAS,WACR,OAAO,GAERvB,UAAU,aAPX,oB,yECzDP,UAnBoB,SAAC,GAGd,IAFNwB,EAEK,EAFLA,KAEK,IADLC,YAAexC,EACV,EADUA,OAAQD,EAClB,EADkBA,YAAaE,EAC/B,EAD+BA,SAEpC,OACC,QAAC,IAAD,CACCH,MAAOyC,EAAKE,YAAYC,MACxB1C,OAAQA,EACRD,YAAaA,EACbE,SAAUA","file":"component---node-modules-gatsby-theme-simple-blog-src-templates-tag-js-6082b5cc3c480b09916f.js","sourcesContent":["/** @jsx jsx */\n// eslint-disable-next-line no-unused-vars\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Link from \"../components/Link\";\nimport { jsx, Styled } from \"theme-ui\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/SEO\";\nimport { slugify, formatDate } from \"../utils/helpers\";\n\nimport \"./PostList.css\";\nconst PostList = ({ posts, themeConfig, locale, tagsPath }) => {\n\tconst { loadMorePosts } = themeConfig;\n\tconst [postsPerPage, setPostsPerPage] = useState(\n\t\tloadMorePosts ? themeConfig.postsPerPage : posts.length\n\t);\n\tconst [postsIncrementBy] = useState(themeConfig.postsIncrementBy);\n\tconst [counter, setCounter] = useState(0);\n\n\tuseEffect(() => {\n\t\tsetCounter(posts.slice(0, postsPerPage).length);\n\t}, [postsPerPage, postsIncrementBy, counter]);\n\n\tconst loadMore = () => {\n\t\tsetCounter(posts.slice(0, postsPerPage + postsIncrementBy).length);\n\t\tsetPostsPerPage(postsPerPage + postsIncrementBy);\n\t};\n\n\treturn (\n\t\t<Layout cssClass=\"posts blog-style\">\n\t\t\t<SEO title=\"Posts\" description=\"posts description\" />\n\t\t\t<div className=\"main-content\">\n\t\t\t\t<Styled.h1 className=\"heading-title\">Posts</Styled.h1>\n\t\t\t\t<div className=\"posts-wrapper\">\n\t\t\t\t\t{posts.slice(0, postsPerPage).map(({ node }, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"post\" key={index.toString()}>\n\t\t\t\t\t\t\t\t<div className=\"post-content\">\n\t\t\t\t\t\t\t\t\t<div className=\"post-meta\">\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"gray\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"post-date\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{formatDate(node.date, locale)}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"post-link\"\n\t\t\t\t\t\t\t\t\t\t\tto={`${node.slug}`}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ textDecoration: \"none\" }}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Styled.h3\n\t\t\t\t\t\t\t\t\t\t\t\tsx={{ fontSize: 2 }}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"post-title\"\n\t\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t__html: node.title\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"post-tags\">\n\t\t\t\t\t\t\t\t\t\t{node.tags.map((tag, index) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\tto={`${tagsPath}/${slugify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttag\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index.toString()}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t\t{counter < posts.length && loadMorePosts && (\n\t\t\t\t\t\t<div className=\"load-more-wrapper\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tsx={{ variant: \"buttons.primary\" }}\n\t\t\t\t\t\t\t\ttabIndex={0}\n\t\t\t\t\t\t\t\tonClick={loadMore}\n\t\t\t\t\t\t\t\tonKeyUp={() => {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName=\"load-more\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tMore posts\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nPostList.propTypes = {\n\tposts: PropTypes.array.isRequired,\n\tthemeConfig: PropTypes.object.isRequired,\n\tlocale: PropTypes.string,\n\ttagsPath: PropTypes.string.isRequired\n};\nexport default PostList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport PostList from \"../components/PostList\";\n\nconst TagTemplate = ({\n\tdata,\n\tpageContext: { locale, themeConfig, tagsPath }\n}) => {\n\treturn (\n\t\t<PostList\n\t\t\tposts={data.allBlogPost.edges}\n\t\t\tlocale={locale}\n\t\t\tthemeConfig={themeConfig}\n\t\t\ttagsPath={tagsPath}\n\t\t/>\n\t);\n};\n\nTagTemplate.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tpageContext: PropTypes.object.isRequired\n};\n\nexport default TagTemplate;\n\nexport const pageQuery = graphql`\n\tquery($tag: String!) {\n\t\tallBlogPost(\n\t\t\tsort: { fields: [date], order: DESC }\n\t\t\tfilter: { tags: { in: [$tag] }, draft: { eq: false } }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\texcerpt\n\t\t\t\t\tauthor\n\t\t\t\t\tslug\n\t\t\t\t\ttitle\n\t\t\t\t\ttags\n\t\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n"],"sourceRoot":""}